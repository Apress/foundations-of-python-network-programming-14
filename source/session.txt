
These are the shell commands invoked in the text of the book, together
with their expected output, so that the result can be version-controlled
and verified as the scripts are updated and corrected.

                                   ~
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ which python3
/usr/bin/python3
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 --version
Python 3.4.0
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ while ! ip a | grep -q eth0; do sleep 0.25; done
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ ssh root@mail.example.com cp /root/var.mail.brandon.backup /var/mail/brandon
Warning: Permanently added 'mail.example.com,10.130.1.3' (ECDSA) to the list of known hosts.
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd chapter12
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_basic_email.py
To: recipient@example.com
From: Test Sender <sender@example.com>
Subject: Test Message, Chapter 12
Date: Tue, 25 Mar 2014 17:14:01 -0400
Message-ID: <20140325232008.15748.50494@h9>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
MIME-Version: 1.0

Hello,
This is a basic message from Chapter 12.
 - Anonymous
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_basic_email.py | python3 display_email.py
From: Test Sender <sender@example.com>
To: recipient@example.com
Date: Tue, 25 Mar 2014 17:14:01 -0400
Subject: Test Message, Chapter 12

Hello,
This is a basic message from Chapter 12.
 - Anonymous

                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_basic_email.py | python3 display_structure.py
 type=text/plain str len=61
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py
To: Test Recipient <recipient@example.com>
From: Test Sender <sender@example.com>
Subject: Foundations of Python Network Programming
Date: Tue, 25 Mar 2014 17:14:01 -0400
Message-ID: <20140325232008.15748.50494@h9>
MIME-Version: 1.0
Content-Type: multipart/alternative;
 boundary="===============8211050864078048428=="

--===============8211050864078048428==
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: 7bit

<p>Hello,</p>
<p>This is a <b>test message</b> from Chapter 12.</p>
<p>- <i>Anonymous</i></p>

--===============8211050864078048428==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
MIME-Version: 1.0

Hello,
This is a MIME message from Chapter 12.
- Anonymous

--===============8211050864078048428==--
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py attachment.txt
To: Test Recipient <recipient@example.com>
From: Test Sender <sender@example.com>
Subject: Foundations of Python Network Programming
Date: Tue, 25 Mar 2014 17:14:01 -0400
Message-ID: <20140325232008.15748.50494@h9>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="===============0373402508605428821=="

--===============0373402508605428821==
Content-Type: multipart/alternative;
 boundary="===============8211050864078048428=="

--===============8211050864078048428==
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: 7bit

<p>Hello,</p>
<p>This is a <b>test message</b> from Chapter 12.</p>
<p>- <i>Anonymous</i></p>

--===============8211050864078048428==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
MIME-Version: 1.0

Hello,
This is a MIME message from Chapter 12.
- Anonymous

--===============8211050864078048428==--

--===============0373402508605428821==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="attachment.txt"
MIME-Version: 1.0

This is a test

--===============0373402508605428821==--
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py -i
To: Test Recipient <recipient@example.com>
From: Test Sender <sender@example.com>
Subject: Foundations of Python Network Programming
Date: Tue, 25 Mar 2014 17:14:01 -0400
Message-ID: <20140325232008.15748.50494@h9>
MIME-Version: 1.0
Content-Type: multipart/alternative;
 boundary="===============2388085504187641652=="

--===============2388085504187641652==
Content-Type: multipart/related;
 boundary="===============3879088202122200706=="

--===============3879088202122200706==
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: 7bit

<p>Hello,</p>
<p>This is a <b>test message</b> from Chapter 12.</p>
<p>- <i>Anonymous</i></p><p>This is the smallest possible blue GIF:</p>
<img src="cid:20140325232008.15748.99346@h9" height="80" width="80">

--===============3879088202122200706==
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="blue-dot.gif"
Content-ID: <20140325232008.15748.99346@h9>
MIME-Version: 1.0

R0lGODlhAQABAJAAAAAA/wAAACwAAAAAAQABAAACAgQBADs=

--===============3879088202122200706==--

--===============2388085504187641652==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
MIME-Version: 1.0

Hello,
This is a MIME message from Chapter 12.
- Anonymous

--===============2388085504187641652==--
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py -i attachment.txt attachment.gz
To: Test Recipient <recipient@example.com>
From: Test Sender <sender@example.com>
Subject: Foundations of Python Network Programming
Date: Tue, 25 Mar 2014 17:14:01 -0400
Message-ID: <20140325232008.15748.50494@h9>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="===============4715676943270851834=="

--===============4715676943270851834==
Content-Type: multipart/alternative;
 boundary="===============2388085504187641652=="

--===============2388085504187641652==
Content-Type: multipart/related;
 boundary="===============3879088202122200706=="

--===============3879088202122200706==
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: 7bit

<p>Hello,</p>
<p>This is a <b>test message</b> from Chapter 12.</p>
<p>- <i>Anonymous</i></p><p>This is the smallest possible blue GIF:</p>
<img src="cid:20140325232008.15748.99346@h9" height="80" width="80">

--===============3879088202122200706==
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="blue-dot.gif"
Content-ID: <20140325232008.15748.99346@h9>
MIME-Version: 1.0

R0lGODlhAQABAJAAAAAA/wAAACwAAAAAAQABAAACAgQBADs=

--===============3879088202122200706==--

--===============2388085504187641652==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
MIME-Version: 1.0

Hello,
This is a MIME message from Chapter 12.
- Anonymous

--===============2388085504187641652==--

--===============4715676943270851834==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="attachment.txt"
MIME-Version: 1.0

This is a test

--===============4715676943270851834==
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="attachment.gz"
MIME-Version: 1.0

H4sIAP3o2D8AAwvJyCxWAKJEhZLU4hIuAIwtwPoPAAAA

--===============4715676943270851834==--
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py | python3 display_email.py
From: Test Sender <sender@example.com>
To: Test Recipient <recipient@example.com>
Date: Tue, 25 Mar 2014 17:14:01 -0400
Subject: Foundations of Python Network Programming

Hello,
This is a MIME message from Chapter 12.
- Anonymous

                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py attachment.txt | python3 display_email.py
From: Test Sender <sender@example.com>
To: Test Recipient <recipient@example.com>
Date: Tue, 25 Mar 2014 17:14:01 -0400
Subject: Foundations of Python Network Programming

Hello,
This is a MIME message from Chapter 12.
- Anonymous

* text/plain attachment named 'attachment.txt': str object of length 15
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py -i | python3 display_email.py
From: Test Sender <sender@example.com>
To: Test Recipient <recipient@example.com>
Date: Tue, 25 Mar 2014 17:14:01 -0400
Subject: Foundations of Python Network Programming

Hello,
This is a MIME message from Chapter 12.
- Anonymous

* image/gif attachment named 'blue-dot.gif': bytes object of length 35
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py -i attachment.txt attachment.gz | python3 display_email.py
From: Test Sender <sender@example.com>
To: Test Recipient <recipient@example.com>
Date: Tue, 25 Mar 2014 17:14:01 -0400
Subject: Foundations of Python Network Programming

Hello,
This is a MIME message from Chapter 12.
- Anonymous

* image/gif attachment named 'blue-dot.gif': bytes object of length 35
* text/plain attachment named 'attachment.txt': str object of length 15
* application/octet-stream attachment named 'attachment.gz': bytes object of length 33
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py | python3 display_structure.py
 type=multipart/alternative
.0 type=text/html str len=94
.1 type=text/plain str len=59
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py attachment.txt | python3 display_structure.py
 type=multipart/mixed
.0 type=multipart/alternative
.0.0 type=text/html str len=94
.0.1 type=text/plain str len=59
.1 type=text/plain str len=15 attachment filename='attachment.txt'
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py -i | python3 display_structure.py
 type=multipart/alternative
.0 type=multipart/related
.0.0 type=text/html str len=209
.0.1 type=image/gif bytes len=35 attachment filename='blue-dot.gif'
.1 type=text/plain str len=59
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_mime_email.py -i attachment.txt attachment.gz | python3 display_structure.py
 type=multipart/mixed
.0 type=multipart/alternative
.0.0 type=multipart/related
.0.0.0 type=text/html str len=209
.0.0.1 type=image/gif bytes len=35 attachment filename='blue-dot.gif'
.0.1 type=text/plain str len=59
.1 type=text/plain str len=15 attachment filename='attachment.txt'
.2 type=application/octet-stream bytes len=33 attachment filename='attachment.gz'
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_unicode_email.py
To: =?utf-8?b?QsO2w7B2YXJy?= <recipient@example.com>
From: Eardstapa <sender@example.com>
Subject: Four lines from The Wanderer
Date: Tue, 25 Mar 2014 17:14:01 -0400
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0

Hw=C3=A6r cwom mearg? Hw=C3=A6r cwom mago?
Hw=C3=A6r cwom ma=C3=BE=C3=BEumgyfa?
Hw=C3=A6r cwom symbla gesetu?
Hw=C3=A6r sindon seledreamas?
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 build_unicode_email.py | python3 display_email.py
From: Eardstapa <sender@example.com>
To: Böðvarr <recipient@example.com>
Date: Tue, 25 Mar 2014 17:14:01 -0400
Subject: Four lines from The Wanderer

Hwær cwom mearg? Hwær cwom mago?
Hwær cwom maþþumgyfa?
Hwær cwom symbla gesetu?
Hwær sindon seledreamas?

                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 -c "from email import utils; print(utils.parsedate('Tue, 25 Mar 2014 17:14:01 -0400'))"
(2014, 3, 25, 17, 14, 1, 0, 1, -1)
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 -c "from email import utils; print(utils.parsedate_tz('Tue, 25 Mar 2014 17:14:01 -0400'))"
(2014, 3, 25, 17, 14, 1, 0, 1, -1, -14400)
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 -c "from email import utils; print(repr(utils.parsedate_to_datetime('Tue, 25 Mar 2014 17:14:01 -0400')))"
datetime.datetime(2014, 3, 25, 17, 14, 1, tzinfo=datetime.timezone(datetime.timedelta(-1, 72000)))
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd ..
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd chapter13
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 simple.py
usage: simple.py server fromaddr toaddr [toaddr...]
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 simple.py mail.example.com sender@example.com brandon@example.com
Message sent to 1 recipient
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 debug.py
usage: debug.py server fromaddr toaddr [toaddr...]
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 debug.py unknown.example.com sender@example.com brandon@example.com
Your message may not have been sent!
[Errno -2] Name or service not known
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 debug.py mail.example.com sender@example.com brandon@example.com
send: 'ehlo [127.0.0.1]\r\n'
reply: b'250-mail.example.com\r\n'
reply: b'250-PIPELINING\r\n'
reply: b'250-SIZE 10240000\r\n'
reply: b'250-VRFY\r\n'
reply: b'250-ETRN\r\n'
reply: b'250-STARTTLS\r\n'
reply: b'250-ENHANCEDSTATUSCODES\r\n'
reply: b'250-8BITMIME\r\n'
reply: b'250 DSN\r\n'
reply: retcode (250); Msg: b'mail.example.com\nPIPELINING\nSIZE 10240000\nVRFY\nETRN\nSTARTTLS\nENHANCEDSTATUSCODES\n8BITMIME\nDSN'
send: 'mail FROM:<sender@example.com> size=210\r\n'
reply: b'250 2.1.0 Ok\r\n'
reply: retcode (250); Msg: b'2.1.0 Ok'
send: 'rcpt TO:<brandon@example.com>\r\n'
reply: b'250 2.1.5 Ok\r\n'
reply: retcode (250); Msg: b'2.1.5 Ok'
send: 'data\r\n'
reply: b'354 End data with <CR><LF>.<CR><LF>\r\n'
reply: retcode (354); Msg: b'End data with <CR><LF>.<CR><LF>'
data: (354, b'End data with <CR><LF>.<CR><LF>')
send: b'To: brandon@example.com\r\nFrom: sender@example.com\r\nSubject: Test Message from simple.py\r\n\r\nHello,\r\n\r\nThis is a test message sent to you from the debug.py program\r\nin Foundations of Python Network Programming.\r\n.\r\n'
reply: b'250 2.0.0 Ok: queued as 7EB362A8\r\n'
reply: retcode (250); Msg: b'2.0.0 Ok: queued as 7EB362A8'
data: (250, b'2.0.0 Ok: queued as 7EB362A8')
send: 'quit\r\n'
reply: b'221 2.0.0 Bye\r\n'
reply: retcode (221); Msg: b'2.0.0 Bye'
Message sent to 1 recipient
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 ehlo.py
usage: ehlo.py server fromaddr toaddr [toaddr...]
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 ehlo.py unknown.example.com sender@example.com brandon@example.com
Your message may not have been sent!
[Errno -2] Name or service not known
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ python3 ehlo.py mail.example.com sender@example.com brandon@example.com
Maximum message size is 10240000
Message sent to 1 recipient
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo TODO: attempt authenticated SMTP to mail.example.com
TODO: attempt authenticated SMTP to mail.example.com
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo TODO: attempt SSL connections to mail.example.com over SMTP
TODO: attempt SSL connections to mail.example.com over SMTP
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd ..
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd chapter14
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 popconn.py mail.example.com brandon
You have 6 messages totaling 3433 bytes
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 mailbox.py mail.example.com brandon
Message 1 has 354 bytes
Message 2 has 442 bytes
Message 3 has 1173 bytes
Message 4 has 489 bytes
Message 5 has 488 bytes
Message 6 has 487 bytes
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ (echo abc123; yes) | python3 download-and-delete.py mail.example.com brandon
Message 1 (size is 354 bytes):

From: Administrator <admin@mail.example.com>
To: Brandon <brandon@mail.example.com>
Subject: Welcome to example.com!

Read this message [ny]?
------------------------------------------------------------------------
We are happy that you have chosen to use example.com's industry-leading
Internet e-mail service and we hope that you experience is a pleasant
one.  If you ever need your password reset, simply contact our staff!

- example.com
------------------------------------------------------------------------

Delete this message [ny]?
Deleted.
Message 2 (size is 442 bytes):

From: Administrator <admin@mail.example.com>
To: Brandon <brandon@mail.example.com>
Subject: Introduction to e-mail

Read this message [ny]?
------------------------------------------------------------------------
Administrator e-mails are sent as plain ASCII without MIME or other
adornments, which we consider a distraction from the beauty of simple
and straightforward text.  Your e-mail folder is stored in the old
"mbox" format to make it easy to use "grep" and other commands beloved
of e-mail power users.

- example.com
------------------------------------------------------------------------

Delete this message [ny]?
Deleted.
Message 3 (size is 1173 bytes):

From: Test Sender <sender@example.com>
To: Test Recipient <recipient@example.com>
Subject: Foundations of Python Network Programming
Date: Tue, 25 Mar 2014 17:14:01 -0400

Read this message [ny]?
------------------------------------------------------------------------
Hello,
This is a MIME message from Chapter 12.
- Anonymous

------------------------------------------------------------------------
This is a test

------------------------------------------------------------------------

Delete this message [ny]?
Deleted.
Message 4 (size is 489 bytes):

From: sender@example.com
To: brandon@example.com
Subject: Test Message from simple.py

Read this message [ny]?
------------------------------------------------------------------------
Hello,

This is a test message sent to you from the simple.py program
in Foundations of Python Network Programming.
------------------------------------------------------------------------

Delete this message [ny]?
Deleted.
Message 5 (size is 488 bytes):

From: sender@example.com
To: brandon@example.com
Subject: Test Message from simple.py

Read this message [ny]?
------------------------------------------------------------------------
Hello,

This is a test message sent to you from the debug.py program
in Foundations of Python Network Programming.
------------------------------------------------------------------------

Delete this message [ny]?
Deleted.
Message 6 (size is 487 bytes):

From: sender@example.com
To: brandon@example.com
Subject: Test Message from simple.py

Read this message [ny]?
------------------------------------------------------------------------
Hello,

This is a test message sent to you from the ehlo.py program
in Foundations of Python Network Programming.
------------------------------------------------------------------------

Delete this message [ny]?
Deleted.
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 popconn.py mail.example.com brandon
You have 6 messages totaling 3433 bytes
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 apopconn.py mail.example.com brandon
Login failed: -ERR APOP not supported by server
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 mailbox.py mail.example.com brandon
Message 1 has 354 bytes
Message 2 has 442 bytes
Message 3 has 1173 bytes
Message 4 has 489 bytes
Message 5 has 488 bytes
Message 6 has 487 bytes
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd ..
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd chapter15
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 open_imaplib.py mail.example.com brandon
Capabilities: ('IMAP4REV1', 'LITERAL+', 'SASL-IR', 'LOGIN-REFERRALS', 'ID', 'ENABLE', 'IDLE', 'AUTH=PLAIN')
Listing mailboxes 
Status: 'OK'
Data:
b'(\\HasNoChildren) "/" INBOX'
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 open_imap.py mail.example.com brandon
Capabilities: ('IMAP4REV1', 'LITERAL+', 'SASL-IR', 'LOGIN-REFERRALS', 'ID', 'ENABLE', 'IDLE', 'SORT', 'SORT=DISPLAY', 'THREAD=REFERENCES', 'THREAD=REFS', 'THREAD=ORDEREDSUBJECT', 'MULTIAPPEND', 'URL-PARTIAL', 'CATENATE', 'UNSELECT', 'CHILDREN', 'NAMESPACE', 'UIDPLUS', 'LIST-EXTENDED', 'I18NLEVEL=1', 'CONDSTORE', 'QRESYNC', 'ESEARCH', 'ESORT', 'SEARCHRES', 'WITHIN', 'CONTEXT=SEARCH', 'LIST-STATUS', 'SPECIAL-USE', 'BINARY', 'MOVE')
Listing mailboxes:
  \HasNoChildren                / INBOX
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 folder_info.py mail.example.com brandon INBOX
EXISTS: 6
FLAGS: ('\\Answered', '\\Flagged', '\\Deleted', '\\Seen', '\\Draft')
NOMODSEQ: ['']
PERMANENTFLAGS: ()
READ-ONLY: ['']
RECENT: 0
UIDNEXT: 13
UIDVALIDITY: 1398531769
UNSEEN: ['1']
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 folder_summary.py mail.example.com brandon INBOX
1 Administrator <admin@mail.example.com>
   We are happy that you have chosen to use example.com's indus ...
2 Administrator <admin@mail.example.com>
   Administrator e-mails are sent as plain ASCII without MIME o ...
3 Test Sender <sender@example.com>
  Parts: multipart/alternative text/plain
10 sender@example.com
   Hello, This is a test message sent to you from the simple ...
11 sender@example.com
   Hello, This is a test message sent to you from the debug. ...
12 sender@example.com
   Hello, This is a test message sent to you from the ehlo.p ...
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ (echo abc123; echo INBOX; echo 1; echo HEADER; echo TEXT; echo q; echo 2; echo HEADER; echo TEXT; echo q; echo 3; echo HEADER; echo TEXT; echo 1; echo 1.1; echo 1.2; echo 2; echo q; echo q; echo q) | python3 simple_client.py mail.example.com brandon

INBOX                          \HasNoChildren

Type a folder name, or "q" to quit: 
     1   2014-03-25 17:14:01     354 bytes  
       From: Administrator <admin@mail.example.com>
       Subject: Welcome to example.com!
       
     2   2014-04-21 12:08:01     442 bytes  
       From: Administrator <admin@mail.example.com>
       Subject: Introduction to e-mail
       
     3   2014-04-21 13:41:01    1173 bytes  
       From: Test Sender <sender@example.com>
       Subject: Foundations of Python Network Programming
       
    10   2014-04-26 17:06:07     489 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
    11   2014-04-26 17:06:07     488 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
    12   2014-04-26 17:06:07     487 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
Folder INBOX - type a message UID, or "q" to quit: 
Flags: none
Structure:
  HEADER
  TEXT      text/plain size=232 

Message 1 - type a part name, or "q" to quit: 
------------------------------------------------------------------------
From: Administrator <admin@mail.example.com>
To: Brandon <brandon@mail.example.com>
Subject: Welcome to example.com!
------------------------------------------------------------------------

Flags: none
Structure:
  HEADER
  TEXT      text/plain size=232 

Message 1 - type a part name, or "q" to quit: 
------------------------------------------------------------------------
We are happy that you have chosen to use example.com's industry-leading
Internet e-mail service and we hope that you experience is a pleasant
one.  If you ever need your password reset, simply contact our staff!

- example.com
------------------------------------------------------------------------

Flags: none
Structure:
  HEADER
  TEXT      text/plain size=232 

Message 1 - type a part name, or "q" to quit: 

     1   2014-03-25 17:14:01     354 bytes  
       From: Administrator <admin@mail.example.com>
       Subject: Welcome to example.com!
       
     2   2014-04-21 12:08:01     442 bytes  
       From: Administrator <admin@mail.example.com>
       Subject: Introduction to e-mail
       
     3   2014-04-21 13:41:01    1173 bytes  
       From: Test Sender <sender@example.com>
       Subject: Foundations of Python Network Programming
       
    10   2014-04-26 17:06:07     489 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
    11   2014-04-26 17:06:07     488 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
    12   2014-04-26 17:06:07     487 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
Folder INBOX - type a message UID, or "q" to quit: 
Flags: none
Structure:
  HEADER
  TEXT      text/plain size=321 

Message 2 - type a part name, or "q" to quit: 
------------------------------------------------------------------------
From: Administrator <admin@mail.example.com>
To: Brandon <brandon@mail.example.com>
Subject: Introduction to e-mail
------------------------------------------------------------------------

Flags: none
Structure:
  HEADER
  TEXT      text/plain size=321 

Message 2 - type a part name, or "q" to quit: 
------------------------------------------------------------------------
Administrator e-mails are sent as plain ASCII without MIME or other
adornments, which we consider a distraction from the beauty of simple
and straightforward text.  Your e-mail folder is stored in the old
"mbox" format to make it easy to use "grep" and other commands beloved
of e-mail power users.

- example.com
------------------------------------------------------------------------

Flags: none
Structure:
  HEADER
  TEXT      text/plain size=321 

Message 2 - type a part name, or "q" to quit: 

     1   2014-03-25 17:14:01     354 bytes  
       From: Administrator <admin@mail.example.com>
       Subject: Welcome to example.com!
       
     2   2014-04-21 12:08:01     442 bytes  
       From: Administrator <admin@mail.example.com>
       Subject: Introduction to e-mail
       
     3   2014-04-21 13:41:01    1173 bytes  
       From: Test Sender <sender@example.com>
       Subject: Foundations of Python Network Programming
       
    10   2014-04-26 17:06:07     489 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
    11   2014-04-26 17:06:07     488 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
    12   2014-04-26 17:06:07     487 bytes  
       From: sender@example.com
       Subject: Test Message from simple.py
       
Folder INBOX - type a message UID, or "q" to quit: 
Flags: none
Structure:
  HEADER
  TEXT      multipart/mixed 
Traceback (most recent call last):
  File "simple_client.py", line 152, in <module>
    main()
  File "simple_client.py", line 23, in main
    explore_account(c)
  File "simple_client.py", line 45, in explore_account
    explore_folder(c, reply)
  File "simple_client.py", line 75, in explore_folder
    explore_message(c, reply)
  File "simple_client.py", line 93, in explore_message
    display_structure(msgdict[uid]['BODYSTRUCTURE'])
  File "simple_client.py", line 149, in display_structure
    display_structure(subparts[i], parentparts + [ str(i + 1) ])
  File "simple_client.py", line 144, in display_structure
    parttype = 'multipart/%s' % structure[1].lower()
AttributeError: 'tuple' object has no attribute 'lower'
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd ..
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ cd chapter16
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo wrong | python3 telnet_login.py ftp.example.com brandon
Password: Username and password failed - giving up
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo abc123 | python3 telnet_login.py ftp.example.com brandon
Password:  exec uptime
 17:06:14 up 13:36,  1 user,  load average: 0.58, 0.70, 0.58

                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ echo wrong | python3 telnet_codes.py ftp.example.com brandon
Password: Sending terminal type "mypython"
Will not 32
Will not 35
Will not 39
Do not 3
Will not 1
Will not 31
Do not 5
Will not 33
Do not 3
Do not 1
Username and password failed - giving up
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
